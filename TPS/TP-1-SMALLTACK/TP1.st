Object subclass: #AlgoPedidos	instanceVariableNames: 'pedidos'	classVariableNames: ''	package: 'TP1'!!AlgoPedidos methodsFor: 'initialization' stamp: 'Ezequiel 10/25/2020 14:59'!initialize 	pedidos := Dictionary new.! !!AlgoPedidos methodsFor: 'as yet unclassified' stamp: 'Ezequiel 11/3/2020 13:10'!removerCuponDePedidoDe: unNombre	|cupon|	self buscarSiElNombreNoEstaEnPedidos: unNombre.	cupon := CuponNulo new.	(pedidos at: unNombre) agregarCupon: cupon.	! !!AlgoPedidos methodsFor: 'as yet unclassified' stamp: 'Ezequiel 11/3/2020 13:10'!precioPedidoDe: unNombre	self buscarSiElNombreNoEstaEnPedidos: unNombre.	^ ((pedidos at: unNombre) devolverCostoTotal).	! !!AlgoPedidos methodsFor: 'as yet unclassified' stamp: 'Ezequiel 11/3/2020 13:13'!buscarSiElNombreEstaEnPedidos: unNombre.	(pedidos includesKey: unNombre) ifTrue: [ PedidoYaCreadoError new signal ].! !!AlgoPedidos methodsFor: 'as yet unclassified' stamp: 'Ezequiel 11/3/2020 13:10'!agregarCuponAPedidoDe: unNombre conValor: unValor	|cupon|	self buscarSiElNombreNoEstaEnPedidos: unNombre.	cupon := CuponPorValor conValor: unValor.	(pedidos at: unNombre) agregarCupon: cupon.! !!AlgoPedidos methodsFor: 'as yet unclassified' stamp: 'Ezequiel 11/3/2020 13:14'!crearPedidoParaRetirarPara: unNombre.	self buscarSiElNombreEstaEnPedidos: unNombre.	pedidos at: unNombre ifAbsentPut: [PedidoParaRetirar new].! !!AlgoPedidos methodsFor: 'as yet unclassified' stamp: 'Ezequiel 11/3/2020 13:14'!cantidadProductosEnPedidoDe: unNombre.	self buscarSiElNombreNoEstaEnPedidos: unNombre.	^ ((pedidos at: unNombre) devolverProductosTotales).! !!AlgoPedidos methodsFor: 'as yet unclassified' stamp: 'Ezequiel 11/3/2020 13:10'!agregarMenuConNombre: unNombre precio: unPrecio yCantidad: unaCantidad para: otroNombre	|menu|	self buscarSiElNombreNoEstaEnPedidos: otroNombre.	menu := Menu conNombre: unNombre conPrecio: unPrecio conCantidad: unaCantidad.	(pedidos at: otroNombre) agregarMenu: menu.! !!AlgoPedidos methodsFor: 'as yet unclassified' stamp: 'Ezequiel 11/3/2020 21:54'!actualizarProductoConNombre: unNombreProducto conCantidad: unaCantidad para: unNombre.	self buscarSiElNombreNoEstaEnPedidos: unNombre.	(pedidos at: unNombre) modificarProducto: unNombreProducto nuevaCantidad: unaCantidad.! !!AlgoPedidos methodsFor: 'as yet unclassified' stamp: 'Ezequiel 11/3/2020 13:14'!crearPedidoConDeliveryPara: unNombre.	self buscarSiElNombreEstaEnPedidos: unNombre.	pedidos at: unNombre ifAbsentPut: [PedidoConDelivery new].	! !!AlgoPedidos methodsFor: 'as yet unclassified' stamp: 'Ezequiel 11/7/2020 13:40'!agregarCuponAPedidoDe: unNombre conPorcentaje: unPorcentaje	|cupon|	self buscarSiElNombreNoEstaEnPedidos: unNombre.	cupon := CuponPorDescuento conDescuento: unPorcentaje.	(pedidos at: unNombre) agregarCupon: cupon.! !!AlgoPedidos methodsFor: 'as yet unclassified' stamp: 'Ezequiel 11/3/2020 13:10'!agregarProductoConNombre: unNombre precio: unPrecio yCantidad: unaCantidad para: otroNombre	|producto|	self buscarSiElNombreNoEstaEnPedidos: otroNombre.	producto := Producto conNombre: unNombre conPrecio: unPrecio conCantidad: unaCantidad.	(pedidos at: otroNombre) agregarProducto: producto.! !!AlgoPedidos methodsFor: 'as yet unclassified' stamp: 'Ezequiel 11/3/2020 13:10'!removerMenuConNombre: unNombre para: otroNombre.	self buscarSiElNombreNoEstaEnPedidos: otroNombre.	(pedidos at: otroNombre) sacarMenu: unNombre.! !!AlgoPedidos methodsFor: 'as yet unclassified' stamp: 'Ezequiel 11/3/2020 13:10'!buscarSiElNombreNoEstaEnPedidos: unNombre.	(pedidos includesKey: unNombre) ifFalse: [ PedidoNoCreadoError new signal ].! !!AlgoPedidos methodsFor: 'as yet unclassified' stamp: 'Ezequiel 11/3/2020 13:10'!removerProductoConNombre: unNombre para: otroNombre.	self buscarSiElNombreNoEstaEnPedidos: otroNombre.	(pedidos at: otroNombre) sacarProducto: unNombre.! !Error subclass: #CantidadDeProductoNegativaError	instanceVariableNames: ''	classVariableNames: ''	package: 'TP1'!Object subclass: #Cupon	instanceVariableNames: 'descuentoEfectivo'	classVariableNames: ''	package: 'TP1'!!Cupon methodsFor: 'accessing' stamp: 'Ezequiel 10/31/2020 18:41'!aplicarDescuento: arg1 	^ self subclassResponsibility! !Error subclass: #CuponConDescuentoMayorAl100Error	instanceVariableNames: ''	classVariableNames: ''	package: 'TP1'!Cupon subclass: #CuponNulo	instanceVariableNames: ''	classVariableNames: ''	package: 'TP1'!!CuponNulo methodsFor: 'as yet unclassified' stamp: 'Ezequiel 10/31/2020 18:41'!aplicarDescuento: unValor.	^ unValor.! !Cupon subclass: #CuponPorDescuento	instanceVariableNames: ''	classVariableNames: ''	package: 'TP1'!!CuponPorDescuento methodsFor: 'initialization' stamp: 'Ezequiel 11/7/2020 13:37'!setDescuento: unPorcentaje.	descuentoEfectivo := (100 - unPorcentaje)/100.! !!CuponPorDescuento methodsFor: 'as yet unclassified' stamp: 'Ezequiel 10/31/2020 18:39'!aplicarDescuento: unValor.	^ (unValor * descuentoEfectivo)! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!CuponPorDescuento class	instanceVariableNames: ''!!CuponPorDescuento class methodsFor: 'as yet unclassified' stamp: 'Ezequiel 11/7/2020 13:37'!conDescuento: unPorcentaje	|cupon|	(unPorcentaje < 0) ifTrue: [ CuponQueAumenteElPrecioEsInvalidoError new signal. ].	(unPorcentaje > 100) ifTrue: [ CuponConDescuentoMayorAl100Error new signal. ].		cupon := CuponPorDescuento new.	cupon setDescuento: unPorcentaje.	^ cupon.! !Cupon subclass: #CuponPorValor	instanceVariableNames: ''	classVariableNames: ''	package: 'TP1'!!CuponPorValor methodsFor: 'initialization' stamp: 'Ezequiel 10/25/2020 21:14'!setValor: unValor.	descuentoEfectivo := unValor.! !!CuponPorValor methodsFor: 'as yet unclassified' stamp: 'Ezequiel 10/31/2020 18:40'!aplicarDescuento: unValor.	(unValor < descuentoEfectivo) ifTrue: [ ^ 0. ]. 	^ (unValor - descuentoEfectivo).! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!CuponPorValor class	instanceVariableNames: ''!!CuponPorValor class methodsFor: 'as yet unclassified' stamp: 'Ezequiel 10/31/2020 13:30'!conValor: unValor	|cupon|	(unValor < 0) ifTrue: [ CuponQueAumenteElPrecioEsInvalidoError new signal. ].		cupon := CuponPorValor new.	cupon setValor: unValor.	^ cupon.! !Error subclass: #CuponQueAumenteElPrecioEsInvalidoError	instanceVariableNames: ''	classVariableNames: ''	package: 'TP1'!Object subclass: #Menu	instanceVariableNames: 'nombre precio cantidad'	classVariableNames: ''	package: 'TP1'!!Menu methodsFor: 'accessing' stamp: 'Ezequiel 11/4/2020 13:00'!devolverCostoTotal.	^ (precio * cantidad).! !!Menu methodsFor: 'as yet unclassified' stamp: 'Ezequiel 11/4/2020 13:00'!devolverPrecio.	^ precio.! !!Menu methodsFor: 'as yet unclassified' stamp: 'Ezequiel 11/4/2020 13:00'!devolverNombre.	^ nombre.! !!Menu methodsFor: 'as yet unclassified' stamp: 'Ezequiel 11/4/2020 13:01'!nuevaCantidad: unaCantidad.	(unaCantidad < 0) ifTrue: [ CantidadDeProductoNegativaError new signal. ].		cantidad := unaCantidad.! !!Menu methodsFor: 'as yet unclassified' stamp: 'Ezequiel 11/4/2020 13:01'!devolverCantidad.	^ cantidad.! !!Menu methodsFor: 'as yet unclassified' stamp: 'Ezequiel 10/31/2020 13:20'!esUnMenu.	^ true.! !!Menu methodsFor: 'initialization' stamp: 'Ezequiel 11/4/2020 13:01'!setNombre: unNombre setPrecio: unPrecio setCantidad: unaCantidad.	nombre := unNombre.	precio := unPrecio.	cantidad := unaCantidad.! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!Menu class	instanceVariableNames: ''!!Menu class methodsFor: 'as yet unclassified' stamp: 'Ezequiel 10/31/2020 13:30'!conNombre: unNombre conPrecio: unPrecio conCantidad: unaCantidad	|unMenu|	(unaCantidad < 0) ifTrue: [ CantidadDeProductoNegativaError new signal. ].	(unPrecio < 0) ifTrue: [ PrecioDeProductoNegativoError new signal. ].		unMenu := Menu new.	unMenu setNombre: unNombre setPrecio: unPrecio setCantidad: unaCantidad.	^ unMenu.! !Object subclass: #Pedido	instanceVariableNames: 'productos cupon'	classVariableNames: ''	package: 'TP1'!!Pedido methodsFor: 'as yet unclassified' stamp: 'Ezequiel 10/31/2020 15:24'!agregarProducto: unProducto.	productos add: unProducto.! !!Pedido methodsFor: 'as yet unclassified' stamp: 'Ezequiel 10/31/2020 15:24'!agregarMenu: unMenu.	productos add: unMenu.	! !!Pedido methodsFor: 'as yet unclassified' stamp: 'Ezequiel 10/31/2020 20:04'!sacarMenu: unNombre	| elemento |	elemento:= productos detect: [ :e |		e devolverNombre  == unNombre.	] ifNone: [ ProductoNoEncontradoError new signal. ].	productos remove: elemento.! !!Pedido methodsFor: 'as yet unclassified' stamp: 'Ezequiel 10/31/2020 20:04'!modificarProducto: unNombreProducto nuevaCantidad: unaCantidad	|elemento|	(unaCantidad < 0) ifTrue: [ CantidadDeProductoNegativaError new signal. ].			elemento := productos detect: [ :e |		e devolverNombre == unNombreProducto.	]	ifNone: [ ProductoNoEncontradoError new signal. ].	elemento nuevaCantidad: unaCantidad.				! !!Pedido methodsFor: 'as yet unclassified' stamp: 'Ezequiel 10/31/2020 20:04'!sacarProducto: unNombre	| elemento |	elemento:= productos detect: [ :e |		e devolverNombre  == unNombre.	]  ifNone: [ ProductoNoEncontradoError new signal. ].	productos remove: elemento.! !!Pedido methodsFor: 'as yet unclassified' stamp: 'Ezequiel 10/25/2020 21:17'!agregarCupon: unCupon.	cupon := unCupon.! !!Pedido methodsFor: 'as yet unclassified' stamp: 'Ezequiel 10/31/2020 14:17'!devolverProductosTotales	| cantidad |	cantidad := 0.	productos do: [ :producto |		cantidad := cantidad + producto devolverCantidad.	].	^  cantidad.! !!Pedido methodsFor: 'initialization' stamp: 'Ezequiel 11/1/2020 14:18'!initialize 	productos := OrderedCollection new.	cupon := CuponNulo new.! !!Pedido methodsFor: 'accessing' stamp: 'Ezequiel 10/25/2020 15:24'!devolverCostoTotal	^ self subclassResponsibility! !Pedido subclass: #PedidoConDelivery	instanceVariableNames: ''	classVariableNames: ''	package: 'TP1'!!PedidoConDelivery methodsFor: 'as yet unclassified' stamp: 'Ezequiel 11/1/2020 20:06'!devolverCostoTotal	| precio |	precio := 0.	productos do: [ :producto |		precio := precio + producto devolverCostoTotal.		(producto esUnMenu) ifTrue: [ self agregarCupon: (CuponNulo new). ].	].	^ ((cupon aplicarDescuento: precio)* 1.20).	! !Error subclass: #PedidoNoCreadoError	instanceVariableNames: ''	classVariableNames: ''	package: 'TP1'!Pedido subclass: #PedidoParaRetirar	instanceVariableNames: ''	classVariableNames: ''	package: 'TP1'!!PedidoParaRetirar methodsFor: 'as yet unclassified' stamp: 'Ezequiel 11/1/2020 19:29'!devolverCostoTotal	| precio |	precio := 0.	productos do: [ :producto |		precio := precio + producto devolverCostoTotal.		(producto esUnMenu) ifTrue: [ self agregarCupon: (CuponNulo new). ].	].	^ (cupon aplicarDescuento: precio).	! !Error subclass: #PedidoYaCreadoError	instanceVariableNames: ''	classVariableNames: ''	package: 'TP1'!Error subclass: #PrecioDeProductoNegativoError	instanceVariableNames: ''	classVariableNames: ''	package: 'TP1'!Object subclass: #Producto	instanceVariableNames: 'nombre precio cantidad'	classVariableNames: ''	package: 'TP1'!!Producto methodsFor: 'accessing' stamp: 'Ezequiel 10/31/2020 13:43'!devolverCostoTotal.	^ (precio * cantidad).! !!Producto methodsFor: 'initialization' stamp: 'Ezequiel 10/25/2020 13:41'!setNombre: unNombre setPrecio: unPrecio setCantidad: unaCantidad.	nombre := unNombre.	precio := unPrecio.	cantidad := unaCantidad.! !!Producto methodsFor: 'as yet unclassified' stamp: 'Ezequiel 10/25/2020 13:48'!devolverPrecio.	^ precio.! !!Producto methodsFor: 'as yet unclassified' stamp: 'Ezequiel 10/25/2020 16:14'!devolverNombre.	^ nombre.! !!Producto methodsFor: 'as yet unclassified' stamp: 'Ezequiel 10/31/2020 15:54'!nuevaCantidad: unaCantidad.	(unaCantidad < 0) ifTrue: [ CantidadDeProductoNegativaError new signal. ].		cantidad := unaCantidad.! !!Producto methodsFor: 'as yet unclassified' stamp: 'Ezequiel 10/25/2020 16:15'!devolverCantidad.	^ cantidad.! !!Producto methodsFor: 'as yet unclassified' stamp: 'Ezequiel 10/31/2020 13:26'!esUnMenu.	^ false.! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!Producto class	instanceVariableNames: ''!!Producto class methodsFor: 'as yet unclassified' stamp: 'Ezequiel 10/31/2020 13:31'!conNombre: unNombre conPrecio: unPrecio conCantidad: unaCantidad	|unProducto|	(unaCantidad < 0) ifTrue: [ CantidadDeProductoNegativaError new signal. ].	(unPrecio < 0) ifTrue: [ PrecioDeProductoNegativoError new signal. ].		unProducto := Producto new.	unProducto setNombre: unNombre setPrecio: unPrecio setCantidad: unaCantidad.	^ unProducto.! !Error subclass: #ProductoNoEncontradoError	instanceVariableNames: ''	classVariableNames: ''	package: 'TP1'!